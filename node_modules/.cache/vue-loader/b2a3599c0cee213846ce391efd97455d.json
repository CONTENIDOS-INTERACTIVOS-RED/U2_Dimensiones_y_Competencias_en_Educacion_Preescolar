{"remainingRequest":"/home/runner/work/U2_Dimensiones_y_Competencias_en_Educacion_Preescolar/U2_Dimensiones_y_Competencias_en_Educacion_Preescolar/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/runner/work/U2_Dimensiones_y_Competencias_en_Educacion_Preescolar/U2_Dimensiones_y_Competencias_en_Educacion_Preescolar/src/views/curso/Tema4.vue?vue&type=template&id=779ebf4a&lang=pug&","dependencies":[{"path":"/home/runner/work/U2_Dimensiones_y_Competencias_en_Educacion_Preescolar/U2_Dimensiones_y_Competencias_en_Educacion_Preescolar/src/views/curso/Tema4.vue","mtime":1751749900818},{"path":"/home/runner/work/U2_Dimensiones_y_Competencias_en_Educacion_Preescolar/U2_Dimensiones_y_Competencias_en_Educacion_Preescolar/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/runner/work/U2_Dimensiones_y_Competencias_en_Educacion_Preescolar/U2_Dimensiones_y_Competencias_en_Educacion_Preescolar/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/home/runner/work/U2_Dimensiones_y_Competencias_en_Educacion_Preescolar/U2_Dimensiones_y_Competencias_en_Educacion_Preescolar/node_modules/pug-plain-loader/index.js","mtime":499162500000},{"path":"/home/runner/work/U2_Dimensiones_y_Competencias_en_Educacion_Preescolar/U2_Dimensiones_y_Competencias_en_Educacion_Preescolar/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/runner/work/U2_Dimensiones_y_Competencias_en_Educacion_Preescolar/U2_Dimensiones_y_Competencias_en_Educacion_Preescolar/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}